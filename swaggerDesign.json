{
    "swagger": "2.0",
    "info": {
      "description": "This is an api server for a to do list.\n",
      "version": "1.0.0",
      "title": "To Do List",
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "host": "chrisleavitt5.onrender.com",
    "basePath": "/",
    "schemes": ["https"],
    "paths": {
      "/todo/{listItemName}": {
        "get": {
          "description": "",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "listItemName",
              "in": "path",
              "description": "listItem name string is required and functions as id",
              "required": true,
              "type": "string",
              "items": {
                "type": "string",
                "default": "available"
              },
              "collectionFormat": "csv"
            }
          ],
          "security": [
            {
              "petstore_auth": ["write:pets", "read:pets"]
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "object"
              }
            },
            "400": {
              "description": "Invalid listItem name value"
            }
          }
        },
        "post": {
        "tags": ["listItem"],
        "summary": "Create To Do List",
        "description": "This is for when a user creates a list item.",
        "operationId": "createlistItem",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successfully created user",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "name": {
                  "type": "string",
                  "example": ""
                }
              }
            }
          }
      },
      "/user": {
        "post": {
          "tags": ["user"],
          "summary": "Create user",
          "description": "This is for when a user creates an account.",
          "operationId": "createUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Created user object",
              "required": true,
              "schema": {
              }
            }
          ],
          "responses": {
            "201": {
              "description": "successfully created user",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string",
                    "example": ""
                  }
                }
              }
            },
            "400": {
              "description": "Invalid listItem name value"
            }
          }
        }
      },
      "/user/login": {
        "get": {
          "tags": ["Not Yet Implemented"],
          "summary": "Logs user into the system",
          "operationId": "loginUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "username",
              "in": "query",
              "description": "The user name for login",
              "required": true,
              "type": "string"
            },
            {
              "name": "password",
              "in": "query",
              "description": "The password for login in clear text",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "headers": {
                "X-Rate-Limit": {
                  "type": "integer",
                  "format": "int32",
                  "description": "calls per hour allowed by the user"
                },
                "X-Expires-After": {
                  "type": "string",
                  "format": "date-time",
                  "description": "date in UTC when token expires"
                }
              },
              "schema": {
                "type": "string"
              }
            },
            "400": {
              "description": "Invalid username/password supplied"
            }
          }
        }
      },
      "/user/logout": {
        "get": {
          "tags": ["Not Yet Implemented"],
          "summary": "Logs out current logged in user session",
          "operationId": "logoutUser",
          "produces": ["application/json"],
          "parameters": [],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/user/{username}": {
        "get": {
          "tags": ["user"],
          "summary": "Get user by user name",
          "operationId": "getUserByName",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "The name that needs to be fetched.",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
              }
            },
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
          "tags": ["Not Yet Implemented"],
          "summary": "Updated user",
          "description": "This can only be done by the logged in user.",
          "operationId": "updateUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "name that need to be updated",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "description": "Updated user object",
              "required": true,
              "schema": {
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Successfully modified user"
            },
            "400": {
              "description": "Invalid user supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "delete": {
          "tags": ["Not Yet Implemented"],
          "summary": "Delete user",
          "description": "This can only be done by the logged in user.",
          "operationId": "deleteUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "The name that needs to be deleted",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "204": {
              "description": "Successfully deleted user"
            },
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/user": {
        "get": {
          "tags": ["user"],
          "summary": "Get all users",
          "operationId": "getAllUsers",
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "Array"
              }
            },
            "500": {
              "description": "Error occurred"
            }
          }
        },
        "post": {
          "tags": ["user"],
          "summary": "Create user",
          "description": "This is for when a user creates an account",
          "operationId": "createUser",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Created user object",
              "required": true,
              "schema": {
              }
            }
          ],
          "responses": {
            "default": {
              "description": "A User object",
              "schema": {
              }
            }
          }
        }
      }
    },
    "securityDefinitions": {
      "petstore_auth": {
        "type": "oauth2",
        "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
        "flow": "implicit",
        "scopes": {
          "write:pets": "modify pets in your account",
          "read:pets": "read your pets"
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "required": ["password", "username"],
        "properties": {
          "_id": {
            "type": "integer",
            "format": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "info": {
          },
          "profile": {
            "$ref": "#/definitions/User_profile"
          }
        }
      },
      "listItem": {
        "type": "object",
        "required": ["colors", "fontFamily", "fontSize", "name"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "example": ""
          }
          }
        }
      },
      "Credentials": {
        "type": "object",
        "required": ["password", "username"],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "User_info": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "currentLocation": {
            "type": "string"
          },
          "openToNewOpportunities": {
            "type": "boolean"
          },
          "profileIsPublic": {
            "type": "boolean"
          },
          "listItem_name": {
            "type": "string"
          }
        }
      },
      "User_profile_experience": {
        "type": "object",
        "properties": {
          "jobTitle": {
            "type": "string"
          },
          "jobDescription": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateStart": {
            "type": "string"
          },
          "dateEnd": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "location": {
            "type": "string"
          }
        }
      },
      "User_profile_education": {
        "type": "object",
        "properties": {
          "institution": {
            "type": "string"
          },
          "programTitle": {
            "type": "string"
          },
          "programDescription": {
            "type": "string"
          },
          "dateStart": {
            "type": "string"
          },
          "dateEnd": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "location": {
            "type": "string"
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "User_profile_projects": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dateStart": {
            "type": "string"
          },
          "dateEnd": {
            "type": "string"
          },
          "githubUrl": {
            "type": "string"
          },
          "hostedUrl": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "User_profile_references": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "relationship": {
            "type": "string"
          },
          "contactInfo": {
            "type": "string"
          },
          "yearsKnown": {
            "type": "integer",
            "format": "int32"
          },
          "knownFromWhere": {
            "type": "string"
          }
        }
      },
      "User_profile": {
        "type": "object",
        "properties": {
          "experience": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/User_profile_experience"
            }
          },
          "education": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/User_profile_education"
            }
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/User_profile_projects"
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/User_profile_references"
            }
          }
        }
      }
    }
  }
}
